name: Release, Build, and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-

      - name: Install npm dependencies
        run: npm ci --include dev

      - name: Install commitlint
        run: npm install -g @commitlint/{cli,config-conventional}

      - name: Update submodules
        run: .github/scripts/update-submodules.sh

      - name: Build changelog
        run: npm run build

      - name: Generate changelog
        run: node .github/scripts/generate-changelog.js

      - name: Release project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: npx semantic-release

      - name: Release individual licenses
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          for license in docs/licenses/*/*/; do
            if [ -f "$license/package.json" ]; then
              echo "Releasing $license"
              (
                cd $license
                npx semantic-release -e ../../../.releaserc.json
              )
            fi
          done

      - name: Commit updated changelogs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md docs/licenses/**/CHANGELOG.md
          git diff-index --quiet HEAD || git commit -m "bot(site): update changelogs [ci]"
          git push

      - name: Upload npm cache
        uses: actions/upload-artifact@v4
        with:
          name: npm-cache
          path: ~/.npm

  build:
    needs: release
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"
          enable-cache: true
          cache-local-path: .cache/uv
          cache-dependency-glob: |
            pyproject.toml

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Download npm cache
        uses: actions/download-artifact@v4
        with:
          name: npm-cache
          path: .cache/npm

      - name: Install npm dependencies
        run: npm ci --include dev

      - name: Build Scripts
        run: npm run build
      - name: install Python with uv
        run: |
          uv python install cpython-3.12.5-linux-x86_64-gnu
          uv pip install .
      - name: Build MkDocs site
        run: |
          rm -rf site
          mkdocs build -d site
      - name: Upload built site
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built site
        uses: actions/download-artifact@v4
        with:
          name: site
          path: site

      - name: Deploy mkdocs
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          mkdocs gh-deploy --force -m "bot(site): deploy site"

  notify:
    needs: [release, deploy]
    if: failure()
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Create GitHub Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Workflow failed: ${{ github.workflow }}',
              body: 'Workflow ${{ github.workflow }} failed on commit ${{ github.sha }}. Check the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            })
