name: Release, Build, and Deploy

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: |
          npm ci
          if [ $? -ne 0 ]; then
            echo "Failed to install dependencies"
            exit 1
          fi
      - name: Install commitlint
        run: |
          npm install -g @commitlint/{cli,config-conventional}
          if [ $? -ne 0 ]; then
            echo "Failed to install commitlint"
            exit 1
          fi
      - name: Generate changelog
        run: |
          node generate-changelog.js
          if [ $? -ne 0 ]; then
            echo "Failed to generate changelog"
            exit 1
          fi
      - name: Release project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: npx semantic-release
      - name: Release individual licenses
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          for license in docs/licenses/*/*/; do
            if [ -f "$license/package.json" ]; then
              echo "Releasing $license"
              (
                cd $license
                npx semantic-release -e ../../../.releaserc.json
                if [ $? -ne 0 ]; then
                  echo "Failed to release $license"
                  exit 1
                fi
              )
            fi
          done
      - name: Commit updated changelogs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md docs/licenses/**/CHANGELOG.md
          git diff-index --quiet HEAD || git commit -m "docs: update changelogs [skip ci]"
          if [ $? -ne 0 ]; then
            echo "Failed to commit updated changelogs"
            exit 1
          fi
          git push
          if [ $? -ne 0 ]; then
            echo "Failed to push changes"
            exit 1
          fi

  build:
    needs: release
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Cache dependencies
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - name: Restore cache
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Install dependencies
        run: |
          export PYTHONPATH=$PYTHONPATH:custom_extensions
          pip install --upgrade pip
          pip install markdown pymdown-extensions mkdocs-material[imaging] mkdocs-static-i18n[material] mkdocs-git-revision-date-localized-plugin mkdocs-git-authors-plugin mkdocs-rss-plugin mkdocs[i18n] pygments pyyaml mkdocs-hooks-plugin
      - name: Build MkDocs site
        run: |
          mkdocs build
          if [ $? -ne 0 ]; then
            echo "Failed to build MkDocs site"
            exit 1
          fi
      - name: Upload built site
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: site

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download built site
        uses: actions/download-artifact@v4.1.7
        with:
          name: site
          path: site
      - name: Deploy mkdocs
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          mkdocs gh-deploy --force

  notify:
    needs: [release, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Workflow failed: ${{ github.workflow }}',
              body: 'Workflow ${{ github.workflow }} failed on commit ${{ github.sha }}. Check the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            })
